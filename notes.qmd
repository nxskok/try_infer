try infer package

```{r}
library(tidyverse)
library(infer)
```

```{r}
# find the point estimate
point_estimate <- gss %>%
  specify(response = hours) %>%
  calculate(stat = "mean")

# generate a distribution of means
dist <- gss %>%
  specify(response = hours) %>%
  hypothesize(null = "point", mu = 40) %>%
  generate(reps = 1000, type = "bootstrap") %>%
  calculate(stat = "mean")
```

```{r}
point_estimate
dist
```

```{r}
dist %>%
  visualize() +
  shade_p_value(obs_stat = point_estimate, direction = "two-sided")
```

```{r}
dist %>%
  get_p_value(obs_stat = point_estimate, direction = "two-sided")
```

```{r}
dist %>%
  get_confidence_interval(
    point_estimate = point_estimate,
    level = 0.95,
    type = "se"
  )
```

theory-based

```{r}
obs_stat <- gss %>%
  specify(response = hours) %>%
  hypothesize(null = "point", mu = 40) %>%
  calculate(stat = "t")

obs_stat
```

```{r}
dist <- gss %>%
  specify(response = hours) %>%
  hypothesize(null = "point", mu = 40) %>%
  assume(distribution = "t")

dist 
```

```{r}
get_p_value(dist, obs_stat, direction = "both")
```

```{r}
visualize(dist) + 
  shade_p_value(obs_stat, direction = "both")

```

```{r}
obs_mean <- gss %>%
  specify(response = hours) %>%
  calculate(stat = "mean")

obs_mean
```

```{r}
ci <- 
  get_confidence_interval(
    dist,
    level = 0.95,
    point_estimate = obs_mean
  )

ci
```

```{r}
visualize(dist) + 
  shade_confidence_interval(ci)

```

